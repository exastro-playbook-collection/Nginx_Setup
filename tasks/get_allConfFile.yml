---
- name: mkdir work directory
  file:
    path: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}"
    state: directory
    mode: '0777'

- name: mkdir localhost work directory
  file:
    path: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}"
    state: directory
    mode: '0777'
  delegate_to: localhost

- name: query nginx installed
  shell: "find / -name nginx | grep '/sbin/nginx'"
  register: _nginx_install_state
  ignore_errors: yes
  changed_when: true

- name: fail when nginx uninstalled
  fail:
    msg: "Nginx is not installed, please install."
  when: "'/sbin/nginx' not in _nginx_install_state.stdout"

- name: set param _install_path
  set_fact:
    _install_path: "{{ _nginx_install_state.stdout | trim()}}"

- name: check nginx.conf ok
  command: "{{ _install_path }} -t"
  changed_when: true
  register: _nginxConf_ok
  ignore_errors: yes
  become: yes

- name: nginx.conf is not ok
  fail:
    msg: "The target machine's nginx configuration file is incorrect, please modify."
  when: "'nginx.conf test is successful' not in _nginxConf_ok.stderr"

- name: get nginx.conf path
  set_fact:
    _nginxConfPath: "{{ _nginxConf_ok.stderr.split('nginx: configuration file ')[1].split(' test is successful')[0] }}"

- name: copy nginxToJson.py on manager host
  copy:
    src: getConf.py
    dest: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}/conf/"

- name: call python to get
  command: "python getConf.py {{ _nginxConfPath }} {{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}/conf/"
  args:
    chdir: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}/conf/"
  changed_when: true

- name: get confPathList.txt
  command: "cat confPathList.txt"
  args:
    chdir: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}/conf/"
  register: _confPathList
  changed_when: true

- name: copy nginx.conf  from target host to manager host
  fetch:
    src: "{{ item }}"
    dest: "{{ VAR_Nginx_tmpDir }}/Nginx_Setup/{{ inventory_hostname }}/conf_root/{{ item }}"
    flat: yes
  with_items: "{{ _confPathList.stdout_lines }}"